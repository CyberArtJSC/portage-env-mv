#!/bin/sh (this line is only for editors)

# Fix various bugs in the fvwm-crystal scripts:
# 1. They are full of bashisms, so use #!/bin/bash
# 2. Avoid some bashisms in fvwm code ([[ ]] == source)
# 3. Remove wrong "break" lines in fvwm-crystal
# 4. Fix some forgotten quoting

my_bugfixes_3_2_3() {
	find "$S" -type d -name Applications -prune \
		-o -type f -exec /bin/sh -c 'Echo() {
	printf '\''%s\n'\'' "$*"
}
for i
do if test -x "$i"
then ! head -n1 -- "$i" | grep '\''^#!/bin/sh'\'' >/dev/null || {
	if [ "${i##*/}" = fvwm-crystal ]
	then	Echo "Fixes various in $i"
		a='\''-e /break;/d'\''
	else	Echo "Fixing #!/bin/sh in $i"
		a=
	fi
	cp -p -- "$i" "$i.patched" && \
	sed -e '\''1s|^#!/bin/sh|#!/bin/bash|'\'' $a -- "$i" >|"$i.patched" && \
	mv -- "$i.patched" "$i"
}
else
if grep -q '\''PipeRead.*\(\[\[\|source\)'\'' -- "$i" >/dev/null
then	Echo "Fixing bashisms in $i"
	sed -i \
		-e '\''s/\[\[/\[/g'\'' \
		-e '\''s/\]\]/\]/g'\'' \
		-e '\''s/==/=/g'\'' \
		-e '\''s/source /. /g'\'' \
		-- "$i"
fi && if grep -q '\''echo \*'\'' -- "$i" >/dev/null
then	Echo "Fixing echo in $i"
	sed -i -e '\''s/echo \*/echo \\*/g'\'' -- "$i"
fi
fi && continue
Echo "Failed to patch $i" >&2
exit 1
done' sh '{}' '+'
}

my_bugfixes_3_2_7() {
	find "$S" -type d -name Applications -prune \
		-o -type f -exec /bin/sh -c 'Echo() {
	printf '\''%s\n'\'' "$*"
}
Sed() {
	text=${1:-bashisms}
	shift
	cp -p -- "$i" "$i.patched" && \
	sed "$@" \
		-e '\''s/echo -e/echo/'\'' \
		-e '\''s/\[\[ /\[ /g'\'' \
		-e '\''s/ \]\]/ \]/g'\'' \
		-e '\''/\[ | \]/{s/==/=/g}'\'' \
		-e '\''s/source \([^a-z]\)/. \1/g'\'' \
		-- "$i" >|"$i.patched" && \
	if diff -q -- "$i.patched" "$i" >/dev/null 2>&1
	then	rm -f -- "$i.patched"
	else	Echo "Fixing $text in $i"
		mv -- "$i.patched" "$i"
	fi && return
	Echo "Failed to patch $i" >&2
	exit 1
}
for i
do	case $i in
	*.html|*.py|*.png|*.gif|*.jpg|*/ChangeLog)
		continue;;
	*/fvwm-crystal)
		Sed break -e '\''/break;/d'\''
		continue;;
	*/DesktopActions)
		Sed arrays \
			-e '\''/Execs=/{s/[()]/'\''"'\''/g}" \
			-e '\''s/Execs\[\*\]/Execs/'\''
		continue;;
	*/fvwm-crystal.videomodeswitch*)
		Sed shebang -e '\''s:^#!/bin/sh:#!/bin/bash:'\''
		continue;;
	esac
	head -n1 -- "$i" | grep bash >/dev/null && continue
	if grep -q '\''echo \*'\'' -- "$i" >/dev/null
	then	Sed quoting -e '\''s/echo \*/echo \\*/g'\''
	else	Sed ""
	fi
done' sh '{}' '+'
}

my_bugfixes() {
	case $PV in
	3.2.3)
		my_bugfixes_3_2_3;;
	3.2.7)
		my_bugfixes_3_2_7;;
	esac
}

# We add/modify some menu entries...

cp_menu() {
	local d
	[ $# -eq 3 ] || {
		eerror "arguments to cp_menu not unique: $*"
		return 1
	}
	einfo "generating menu ${3##*/}"
	case $3 in
	/*)
		d=$3;;
	*)
		d=${2%/*}/$3;;
	esac
	cp -p -- "$2" "$d" && sed -e "$1" -- "$2" >|"$d" || {
		eerror "failed: cp_menu $2 $3"
		return 1
	}
}

cp_menu2() {
	local source dest
	source=$1
	dest=$2
	shift 2
	einfo "generating menu ${dest##*/}"
	cp -p -- "$source" "$dest" && sed "$@" -- "$source" >|"$dest" || {
		eerror "failed: cp_menu2 $source $dest"
		return 1
	}
}

cp_mwww() {
	local i c
	c=continue
	case $1 in
	-*)
		c=:
		shift;;
	esac
	for i
	do	cp_menu2 "$i" "$i.mwww" \
			-e 's/\(exec FvwmCommand .A \)/ \1sudox -x -- mwww exec /' \
			-e 's/^exec/cd ~mwww; exec sudox -T -- mwww exec/' \
			-e 's/ exec/exec/' || return
		$c
		rm -v -- "$i" || return
	done
}

link_items() {
	local name i
	name=$1
	shift
	for i
	do	ln -snv -- "${i##*/}" "${i%/*}/$name" || {
			eerror "failed: link_items $1"
			return 1
		}
	done
}

var_assign() {
	eval $1=\$2
	[ $# -eq 2 ] || {
		eerror "assignment to $1 is not unique: ${2-}"
		return 1
	}
}

rename_file() {
	local r f s e
	r=:
	case $1 in
	-*)
		r='return 0'
		shift;;
	esac
	test -r "$1" || {
		$r
		eerror "rename_file: cannot find $1"
		return 1
	}
	[ $# -eq 3 ] || {
		eerror "arguments for rename_file not unique: $*"
		return 1
	}
	f=${1##*/}
	s=${f%%"$2"*}
	e=${f#*"$2"}
	[ x"$s" != x"$f" ] && mv -vi -- "$1" "${1%/*}$s$3$e" || {
		eerror "failed: rename_file $*"
		return 1
	}
}

my_menu() {
	local fvwm apps network browsers games icons seamonkey
	einfo 'Modifying menu entries'
	fvwm=${S}/fvwm/
	apps=${fvwm}Applications/
	var_assign network "$apps"*Network/ || return
	var_assign games "$apps"*Games/ || return
	var_assign browsers "$network"*Web_Browsers/ || return
	rename_file -i "$browsers"*flock* flock flock-browser || return
	rename_file "$games"*Shooters/*chromium* chromium chromium-game || return
	cp_menu 's/exec [^ ]*/exec adsl-gui/' \
		"$network"*Dial-up/~kppp~kPPP '~adsl-gui~adsl-gui' || return
	cp_menu 's/elinks/links/' \
		"$browsers"*elinks* '~links~links' || return
	var_assign seamonkey "$browsers"*seamonkey* || return
	cp_menu 's/seamonkey/palemoon/' \
		"$seamonkey" '20~palemoon~Palemoon' || return
	cp_menu 's/seamonkey/chromium/' \
		"$seamonkey" '15~chromium~Chromium' || return
	cp_menu 's/seamonkey/chrome/' \
		"$seamonkey" '15~chrome~google-chrome' || return
	cp_mwww -r "${apps}Network/"*Telephony/* || return
	cp_mwww "${apps}System/"*File_Managers/* \
		"${apps}System/"*Terminals/* \
		"${apps}Network/"*Web_Browsers/* || return
	cp_menu 's/seamonkey/googleearth/' \
		"$seamonkey".mwww '~googleearth~Googleearth.mwww' || return
	einfo 'Modifying icons'
	icons=${fvwm}icons/Default/
	rm -rfv -- "$icons"*/apps/chromium.png || return
	link_items chromium.png "$icons"*/apps/google-chrome.png || return
	link_items palemoon.png "$icons"*/apps/iceweasel.png || return
	link_items adsl-gui.png "$icons"*/apps/kppp.png || return
	link_items links.png "$icons"*/apps/elinks.png || return
	link_items googleearth.png "$icons"*/apps/civserver.png || return
	einfo 'Removing wallpapers'
	rm -rfv -- "$fvwm/wallpapers"
}

post_src_prepare() {
	local f
	f=${PORTAGE_CONFIGROOT%/}/etc/portage/env/$CATEGORY/$PN
	einfo "mv's hack: $f"
	if my_bugfixes && my_menu
	then	einfo "mv's hack $f applied"
	else	die "mv's hack $f failed"
	fi
}
